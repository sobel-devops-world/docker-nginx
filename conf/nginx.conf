
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


# number of file descriptors used for nginx
# the limit for the maximum FDs on the server is usually set by the OS.
# if you don't set FD's then OS settings will be used which is by default 2000
worker_rlimit_nofile 100000;



events {

  # determines how much clients will be served per worker
  # max clients = worker_connections * worker_processes
  # max clients is also limited by the number of socket connections available on the system (~64k)
    worker_connections  1024;

  # optmized to serve many clients with each thread, essential for linux -- for testing environment
  use epoll;

  # accept as many connections as possible, may flood worker connections if set too low -- for testing environment
  multi_accept on;
}


http {


    #client_body_temp_path /tmp/client_temp;
    #proxy_temp_path       /tmp/proxy_temp_path;
    #fastcgi_temp_path     /tmp/fastcgi_temp;
    #uwsgi_temp_path       /tmp/uwsgi_temp;
    #scgi_temp_path        /tmp/scgi_temp;
    ##
	# Basic Settings
	##
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
    
    client_header_timeout 10;
    types_hash_max_size 2048;

    #Just For Security Reason
    server_tokens off;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;


    # request timed out -- default 60
    client_body_timeout 30;

    # if client stop responding, free up memory -- default 60
    send_timeout 10;

    # server will close connection after this time -- default 75
    keepalive_timeout 15;

    # number of requests client can make over keep-alive -- for testing environment
    keepalive_requests 800;


    client_max_body_size 3M;
    client_body_buffer_size 16K;
    client_header_buffer_size 4k;
    large_client_header_buffers 2 3k;

    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 12 8k;

    # server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

    #Disable Content SniffingPermalink
    add_header X-Content-Type-Options nosniff;

    #Cross-Site Scripting (XSS) Filter
    add_header X-XSS-Protection "1; mode=block";

    #add_header    X-Frame-Options SAMEORIGIN;
    add_header X-Frame-Options SAMEORIGIN;


    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;


##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";
	gzip_comp_level 5;
	gzip_min_length 1000;
    
    #gzip_proxied any;
    gzip_proxied expired no-cache no-store private auth;
    gzip_buffers 16 8k;
    
    #gzip_http_version 1.1;
	gzip_types
        	application/atom+xml
       	    application/javascript
       	 	application/json
        	application/ld+json
      		application/manifest+json
       		application/rss+xml
  	        application/vnd.geo+json
        	application/vnd.ms-fontobject
        	application/x-font-ttf
      		application/x-web-app-manifest+json
       		application/xhtml+xml
     	    application/xml
       		font/opentype
       		image/bmp
      		image/svg+xml
        	image/x-icon
       		text/cache-manifest
        	text/css
      		text/plain
        	text/vcard
        	text/vnd.rim.location.xloc
       		text/vtt
       		text/x-component
       		text/x-cross-domain-policy;

  # cache informations about FDs, frequently accessed files
  # can boost performance, but you need to test those values
  open_file_cache max=2000 inactive=2m;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;


  #Cache config
  proxy_cache_path /tmp/nginx levels=1:2 keys_zone=cache_reverse_proxy_nginx:10m inactive=24h use_temp_path=off;
  #  proxy_cache_path /tmp/nginx keys_zone=one:10m max_size=500m inactive=24h use_temp_path=off;

  proxy_cache_key "$scheme$request_method$host$request_uri";
  proxy_cache_valid 200 302 10m;
  proxy_cache_valid 404 1m;

  map $sent_http_content_type $expires {

    application/pdf 42d;
    #application/zip              42d;
    #application/x-7z-compressed   42d;
    #application/x-rar-compressed  42d;

    #   application/octet-stream  1M;

    #   application/javascript    3M;
    #   text/css                  3M;
    ~image/ 3M;
    #    ~video/                   3M;
    #    ~audio/                   3M;
    #    ~text/                    1d; # html/php
    #
    default off;
  }

  expires $expires;

   #NGINX Simple DDoS Defense
# limit the number of connections per single IP
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# limit the number of requests for a given session
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;

# zone which we want to limit by upper values, we want limit whole server
server {
    limit_conn conn_limit_per_ip 50;
    limit_req zone=req_limit_per_ip burst=50 nodelay;
}


    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  /var/log/nginx/access.log  main;
    # only log critical errors
    #error_log /var/log/nginx/error.log crit;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

    include /etc/nginx/conf.d/*.conf;
}
